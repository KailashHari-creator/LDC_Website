/*eslint no-magic-numbers: ["error", { "ignore": [ 0] }]*/
/**
 * @module entities
 */
/**
 * @class Defaults
 * @description Defaults Entity
 */
var Config = /** @class */ (function () {
    function Defaults() {
        /**
         * @constructor
         * @method constructor
         * @return {void}
         */
        this.appspace = 'app.';
        this.socketRoot = '/tmp/';
        this.id = "world";
        this.encoding = 'utf8';
        this.rawBuffer = false;
        this.sync = false;
        this.unlink = true;
        this.delimiter = '\f';
        this.silent = false;
        this.logDepth = 5;
        this.logInColor = true;
        this.logger = console.log.bind(console);
        this.maxConnections = 100;
        this.retry = 500;
        this.maxRetries = Infinity;
        this.stopRetrying = false;
        this.IPType = 'IPv4';
        this.tls = false;
        this.networkHost = (this.IPType == 'IPv6') ? '::1' : '127.0.0.1';
        this.networkPort = 8000;
        this.interface = {
            localAddress: false,
            localPort: false,
            family: false,
            hints: false,
            lookup: false
        };
        this.appspace = 'app.';
        this.socketRoot = '/tmp/';
        this.id = "world";
        this.encoding = 'utf8';
        this.rawBuffer = false;
        this.sync = false;
        this.unlink = true;
        this.delimiter = '\f';
        this.silent = false;
        this.logDepth = 5;
        this.logInColor = true;
        this.logger = console.log.bind(console);
        this.maxConnections = 100;
        this.retry = 500;
        this.maxRetries = Infinity;
        this.stopRetrying = false;
        this.IPType = 'IPv4';
        this.tls = false;
        this.networkHost = (this.IPType == 'IPv6') ? '::1' : '127.0.0.1';
        this.networkPort = 8000;
        this.interface = {
            localAddress: false,
            localPort: false,
            family: false,
            hints: false,
            lookup: false
        };
    }
    return Defaults;
}());
export default Config;
//# sourceMappingURL=defaults.js.map