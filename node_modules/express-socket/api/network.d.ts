declare const ipc: any;
declare const IEvent: any, IServer: any, IClient: any;
declare const isFunction: any;
interface INetwork {
    readonly queue: CallableFunction;
    readonly serve: CallableFunction;
}
declare class Network implements INetwork {
    private events;
    private names;
    private appspace;
    private socketRoot;
    private encoding;
    private delimiter;
    private sync;
    private silent;
    private logInColor;
    private logDepth;
    private logger;
    private maxConnections;
    private retry;
    private maxRetries;
    private stopRetrying;
    private unlink;
    private running;
    private flag;
    private id;
    private host;
    private __;
    private __q;
    constructor();
    queue(name: string, event: any, callback: Function): void;
    send(name: string, event: string, callback: Function): void;
    receive(name: string, callback: Function): void;
    serve(host: string | boolean, callback?: Function): void;
}
declare const network: Network;
